/**
Time Complexity - O(N)
Space Complexity - O(1)
 */
class Solution {
    public int calculate(String s) {
        // base case
        if (s == null) {
            return 0;
        }
        s = s.trim();
        int n = s.length();
        char lastSign = '+';
        int curr = 0;
        int result = 0;
        int tail = 0;
       
        for (int i=0; i < n; i++) {
            char c = s.charAt(i);
            if (Character.isDigit(c)) {
                curr = curr *10 + c -'0';
            }
          if ((!Character.isDigit(c) && c != ' ') || (i ==   n-1)) {
                if (lastSign == '+') {
                    result += tail;
                    tail  = curr;
                } else if (lastSign == '-') {
                    result += tail;
                    tail = -curr;
                } else if (lastSign == '*') {
                    tail = tail*curr;
                } else if (lastSign == '/') {
                   tail = tail/curr;
                }
                lastSign = c;
                curr = 0;
            }
        }
        result += tail;
        return result;
    }
}
