Time: O(n)
Space: O(n) - stack space

class Solution {
	public int calculate(String s) {
		if(s==null || s.length() ==0) return 0;
		int num = 0; int lastSign = '+';
		int n = s.length();
		Stack<Integer> st = new Stack<>();
		for(int i=0; i< n;i++)
		{
			Character c = s.charAt(i);
			if(Character.isDigit(c))
			{
				num = num*10 + c - '0';
			}

			if((!Character.isDigit(c) && c != ' ') || i == n-1){
				if(lastSign == '+') st.push(num);
				else if(lastSign == '-') st.push(-num);
				else if(lastSign == '*') st.push(st.pop()*num);
				else if(lastSign == '/') st.push(st.pop()/num);
				num = 0; lastSign = c;
			}
		}

		int result = 0;
		while(!st.isEmpty())
		{
			result = result + st.pop();
		}

		return result;

	}
}
