class Solution {
    public int calculate(String s) {
        
        //227. Basic Calculator II
        //Time complexity : O(n) where n i athe length of the string
        //Space : O(n/2)
        if(s == null || s.length() == 0)
            return 0;
        Stack<Integer> st = new Stack<>();
        int n = s.length();
        int result =0;
        int num =0;
        char lastSign = '+';
        
        for(int i =0;i <n; i++){
            char ch = s.charAt(i);
            if(Character.isDigit(ch)){
                num = num *10 + ch-'0';
                
            }
             if((!Character.isDigit(ch) && ch!=' ' )|| (i == n-1) ){
                if(lastSign == '+')
                    st.push(num);
                else if(lastSign == '-')
                    st.push(-num);
                else if(lastSign == '*')
                    st.push(st.pop() * num);
                else
                    st.push(st.pop() / num);
                num =0;
                lastSign = ch;
            }
        }
        while(!st.isEmpty()){
            result +=st.pop();
        }
        return result;
    }
}