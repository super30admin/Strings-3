Time complexity: O(n) -> n= length of string
Space complexity: O(n)
Did this code successfully submitted on leetcode: Yes


class Solution {
    public int calculate(String s) {
        
        if(s.length()==0)
            return 0;
        
        int size = s.length();
        
        int num = 0;
        char sign = '+';
        
        Stack<Integer> stack = new Stack<>();
        
        for(int i=0; i<size; i++){
            
            char ch = s.charAt(i);
            
            if(Character.isDigit(ch)){
                num = num*10 + (ch-'0');
            }
            
            if(!Character.isDigit(ch) && ch!=' ' || i== size-1){
                if(sign=='+'){
                    stack.push(+num);
                }else if(sign=='-'){
                    stack.push(-1*num);
                }else if(sign == '*'){
                    stack.push(stack.pop()*num);
                }else if(sign == '/'){
                    stack.push(stack.pop()/num);
                }
                
                sign = ch;
                num = 0;
            }
        }
        
        int ret_val = 0;
        while(!stack.isEmpty()){
            ret_val += stack.pop();
        }
        
        return ret_val;
    }
}
